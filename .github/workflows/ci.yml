name: CI

on:
  push:
    branches: [ main ] # Only trigger on the 'main' branch
  pull_request:
    branches: [ main ] # Only trigger for pull requests targeting 'main'

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, pdo
          coverage: none

      # Step 3: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm' # Cache npm dependencies for faster builds

      # Step 4: Copy .env file if it doesn't exist
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # Step 5: Install Composer dependencies
      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      # Step 6: Install NPM dependencies
      - name: Install NPM dependencies
        run: npm ci

      # Step 7: Generate Laravel application key
      - name: Generate application key
        run: php artisan key:generate

      # Step 8: Set directory permissions
      - name: Set directory permissions
        run: chmod -R 777 storage bootstrap/cache

      # Step 9: Create SQLite database
      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      # Step 10: Build frontend assets
      - name: Build frontend assets
        run: npm run build

      # Step 11: Run tests
      - name: Run tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test